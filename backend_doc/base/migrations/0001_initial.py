# Generated by Django 4.1.6 on 2023-02-06 11:56

import base.managers
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./_ only.', max_length=155, unique=True, verbose_name='email address')),
                ('pswd_token', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('manager', base.managers.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='Clinic/')),
                ('clinic_name', models.CharField(blank=True, max_length=200, null=True)),
                ('clinic_address', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='Hospital/')),
                ('hospital_name', models.CharField(blank=True, max_length=200, null=True)),
                ('hospital_address', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='Product/')),
                ('description', models.TextField(blank=True, null=True)),
                ('specialization', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('numReviews', models.IntegerField(blank=True, default=0, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='Lab/')),
                ('lab_name', models.CharField(blank=True, max_length=200, null=True)),
                ('lab_address', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('product', models.ManyToManyField(related_name='labs', to='base.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalFee',
            fields=[
                ('fees', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('HospitalFee_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospitalfees', to='base.hospital')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospitalfees', to='base.product')),
            ],
            options={
                'unique_together': {('product_id', 'hospital_id')},
            },
        ),
        migrations.AddField(
            model_name='hospital',
            name='product',
            field=models.ManyToManyField(related_name='hospitals', through='base.HospitalFee', to='base.product'),
        ),
        migrations.AddField(
            model_name='hospital',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('disease_name', models.CharField(blank=True, max_length=200, null=True)),
                ('disease_symptoms', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('clinic', models.ManyToManyField(blank=True, related_name='diseases', to='base.clinic')),
                ('hospital', models.ManyToManyField(blank=True, related_name='diseases', to='base.hospital')),
                ('lab', models.ManyToManyField(blank=True, related_name='diseases', to='base.lab')),
                ('product', models.ManyToManyField(related_name='diseases', to='base.product')),
            ],
        ),
        migrations.AddField(
            model_name='clinic',
            name='product',
            field=models.ManyToManyField(related_name='clinic', to='base.product'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LabFee',
            fields=[
                ('fees', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('LabFee_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('lab_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labfees', to='base.lab')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labfees', to='base.product')),
            ],
            options={
                'unique_together': {('product_id', 'lab_id')},
            },
        ),
        migrations.CreateModel(
            name='ClinicFee',
            fields=[
                ('fees', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('ClinicFee_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('clinic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinicfees', to='base.clinic')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinicfees', to='base.product')),
            ],
            options={
                'unique_together': {('product_id', 'clinic_id')},
            },
        ),
    ]
